{"name":"Goengine","tagline":"Boilerplate for Go uses Sinatra style routing with some features from HTML5-Boilerplate along with Twitter Bootstrap 2.0","body":"# GoEngine Boilerplate [![Build Status](https://travis-ci.org/ninnemana/goengine.png?branch=non-appengine)](https://travis-ci.org/ninnemana/goengine)\r\n\r\nGoEngine Boilerplate is combination of serveral different repositories, some made for Go some not.\r\n\r\nThe project is built using with Sinatra style routing and MySQL support. HTML Structure and design using h5bp(http://html5boilerplate.com) and Twitter Bootstrap(http://twitter.github.com/bootstrap). Javascript templating is done with mustache.js, but has not been baked into requireJS. The javascript component incorporates RequireJS for dependency management.\r\n\r\n**IMPORTANT**: If you **__are__** using Google AppEngine, use the [_gae_](https://github.com/ninnemana/goengine/tree/gae) branch.\r\n\r\nDeploying\r\n-----------\r\n\r\nYou can deploy this app manually or using Capistrano.  If you choose to use Capistrano, here's an example to prompt for populating the ConnectionString so you can keep it out of your public repo for testing purposes:\r\n\r\n```ruby\r\ndefault_run_options[:pty] = true\r\nssh_options[:forward_agent] = true\r\n\r\n\r\nset :application, \"ApplicationName\"\r\nset :appname,     \"application-name\"\r\nset :repository,  \"git@github.com:youraccount/yourrepo.git\"\r\n\r\nset :scm, :git\r\nset :scm_passphrase, \"\"\r\nset :user, \"linuxuser\"\r\n\r\nrole :web, \"server1.address.com\", \"server2.address.com\"\r\nrole :app, \"server1.address.com\", \"server2.address.com\"\r\n\r\nset :deploy_to, \"/home/#{user}/#{application}\"\r\nset :deploy_via, :remote_cache\r\n\r\nset :use_sudo, false\r\nset :sudo_prompt, \"\"\r\nset :normalize_asset_timestamps, false\r\n\r\nafter :deploy, \"deploy:goget\", \"db:configure\", \"deploy:compile\", \"deploy:stop\", \"deploy:restart\"\r\n\r\nnamespace :db do\r\n  desc \"set database Connection String\"\r\n  task :configure do\r\n    set(:database_username) { Capistrano::CLI.ui.ask(\"Database Username:\") }\r\n  \r\n    set(:database_password) { Capistrano::CLI.password_prompt(\"Database Password:\") }\r\n\r\n    db_config = <<-EOF\r\n      package database\r\n\r\n      const (\r\n        db_proto = \"tcp\"\r\n        db_addr  = \"databaseaddress:3306\"\r\n        db_user  = \"#{database_username}\"\r\n        db_pass  = \"#{database_password}\"\r\n        db_name  = \"databasename\"\r\n      )\r\n    EOF\r\n    run \"mkdir -p #{deploy_to}/current/helpers/database\"\r\n    put db_config, \"#{deploy_to}/current/helpers/database/ConnectionString.go\"\r\n  end\r\nend\r\nnamespace :deploy do\r\n  task :goget do\r\n    run \"/usr/local/go/bin/go get github.com/ziutek/mymysql/native\"\r\n    run \"/usr/local/go/bin/go get github.com/ziutek/mymysql/mysql\"\r\n  end\r\n  task :compile do\r\n    run \"GOOS=linux GOARCH=amd64 CGO_ENABLED=0 /usr/local/go/bin/go build -o #{deploy_to}/current/#{appname} #{deploy_to}/current/index.go\"\r\n  end\r\n  task :start do ; end\r\n  task :stop do \r\n      kill_processes_matching \"#{appname}\"\r\n  end\r\n  task :restart do\r\n    restart_cmd = \"#{current_release}/#{appname} -http=127.0.0.1:8080 -path=#{deploy_to}/current/\"\r\n    run \"nohup sh -c '#{restart_cmd} &' > nohup.out\"\r\n  end\r\nend\r\n\r\ndef kill_processes_matching(name)\r\n  run \"ps -ef | grep #{name} | grep -v grep | awk '{print $2}' | sudo xargs kill -2 || echo 'no process with name #{name} found'\"\r\nend\r\n\r\n```\r\n\r\nDepending on the server you're on, you may need to define the path of the application as a flag in the deployment script or when running manually on the server. The reason for that is the server may have issues pathing the static files in the project. The example in the script above should help get the deployment working properly with the right static file paths.\r\n\r\nMustache.js\r\n-----------\r\n\r\nmustache.js has been converted to use [[ ]] as delimiters so it can play nice with golang's html/template package.\r\n\r\nContributors\r\n-----------\r\n\r\n**Alex Ninneman**\r\n\r\n+ http://twitter.com/ninnemana\r\n+ http://github.com/ninnemana\r\n\r\n**Jessica Janiuk**\r\n\r\n+ http://twitter.com/janiukjf\r\n+ http://github.com/janiukjf","google":"UA-35706556-1","note":"Don't delete this file! It's used internally to help with page regeneration."}